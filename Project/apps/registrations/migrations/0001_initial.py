# Generated by Django 4.1.2 on 2022-10-09 06:36

import apps.registrations.models.scout_leaders
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jurisdictions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoutLeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, max_length=60, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='middle name')),
                ('surname', models.CharField(max_length=60, verbose_name='surname')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], db_index=True, max_length=1, verbose_name='gender')),
                ('image', models.ImageField(upload_to='Profile Image/%Y/%m/%d', verbose_name='Profile Picture')),
                ('registration_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='registration date')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='activeness')),
                ('date_of_birth', models.DateField(validators=[apps.registrations.models.scout_leaders.over_26_years])),
                ('national_id', models.CharField(max_length=8, unique=True, verbose_name='National ID/Passport')),
                ('email', models.EmailField(help_text='example@gmail.com', max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message="Entered mobile number isn't in a right format!", regex='^[0-9]{10,15}$')])),
                ('tsc_number', models.CharField(blank=True, max_length=6, null=True)),
                ('training', models.CharField(choices=[('Not Yet Trained', 'Not Yet Trained'), ('ITC', 'ITC'), ('PTC', 'PTC'), ('WB Theory', 'WB Theory'), ('WB Course', 'WB Course'), ('WB Assessment', 'WB Assessment'), ('Two Beads', 'Two Beads'), ('ALT Course', 'ALT Course'), ('ALT Project', 'ALT Project'), ('Three Beads', 'Three Beads'), ('LT Course', 'LT Course'), ('LT Project', 'LT Project'), ('Four Beads', 'Four Beads')], db_index=True, default='Not Yet Trained', max_length=15, verbose_name='Level of Training')),
                ('life_member', models.BooleanField(db_index=True, default=False)),
                ('rank', models.ForeignKey(default='Unit-Leader', on_delete=django.db.models.deletion.PROTECT, to='jurisdictions.rank')),
                ('sub_county', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jurisdictions.subcounty')),
            ],
            options={
                'permissions': [('can_verify_scout_leaders', 'Can verify scout leaders')],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Unit Name')),
                ('sponsoring_authority', models.CharField(blank=True, max_length=100, null=True)),
                ('sections', multiselectfield.db.fields.MultiSelectField(choices=[('Sungura', 'Sungura'), ('Chipukizi', 'Chipukizi'), ('Mwamba', 'Mwamba'), ('Jasiri', 'Jasiri')], db_index=True, max_length=10)),
                ('date_warranted', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='activeness')),
                ('sub_county', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jurisdictions.subcounty')),
            ],
            options={
                'permissions': [('can_verify_units', 'Can verify units'), ('can_print_units_certs', 'Can print units certificates')],
                'unique_together': {('name', 'sub_county')},
            },
        ),
        migrations.CreateModel(
            name='ScoutLeaderCert',
            fields=[
                ('code', models.CharField(db_index=True, max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('scout_leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registrations.scoutleader')),
            ],
        ),
        migrations.AddField(
            model_name='scoutleader',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registrations.unit'),
        ),
        migrations.CreateModel(
            name='Scout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, max_length=60, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='middle name')),
                ('surname', models.CharField(max_length=60, verbose_name='surname')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], db_index=True, max_length=1, verbose_name='gender')),
                ('image', models.ImageField(upload_to='Profile Image/%Y/%m/%d', verbose_name='Profile Picture')),
                ('registration_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='registration date')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='activeness')),
                ('birth_certificate_number', models.CharField(blank=True, max_length=8, null=True, verbose_name='Birth Certificate Number')),
                ('section', models.CharField(choices=[('Sungura', 'Sungura'), ('Chipukizi', 'Chipukizi'), ('Mwamba', 'Mwamba'), ('Jasiri', 'Jasiri')], db_index=True, max_length=10)),
                ('investiture', models.BooleanField(db_index=True, default=False)),
                ('jasiri_investiture', models.BooleanField(db_index=True, default=False)),
                ('nyota_i', models.BooleanField(db_index=True, default=False, verbose_name='Nyota I')),
                ('nyota_ii', models.BooleanField(db_index=True, default=False, verbose_name='Nyota II')),
                ('nyota_iii', models.BooleanField(db_index=True, default=False, verbose_name='Nyota III')),
                ('link_badge_award', models.BooleanField(db_index=True, default=False, verbose_name='Link Badge Award')),
                ('zizi', models.BooleanField(db_index=True, default=False, verbose_name='Zizi')),
                ('shina', models.BooleanField(db_index=True, default=False, verbose_name='Shina')),
                ('tawi', models.BooleanField(db_index=True, default=False, verbose_name='Tawi')),
                ('chui_badge_award', models.BooleanField(db_index=True, default=False, verbose_name='Chui Badge Award')),
                ('mwanzo', models.BooleanField(db_index=True, default=False, verbose_name='Mwanzo')),
                ('mwangaza', models.BooleanField(db_index=True, default=False, verbose_name='Mwangaza')),
                ('kilele', models.BooleanField(db_index=True, default=False, verbose_name='Kilele')),
                ('simba_badge_award', models.BooleanField(db_index=True, default=False, verbose_name='Simba Badge Award')),
                ('csa_award', models.BooleanField(db_index=True, default=False, verbose_name='CSA Award')),
                ('date_of_birth', models.DateField()),
                ('national_id', models.CharField(blank=True, help_text='Leave blank if the Scout is not a Jasiri', max_length=8, null=True, unique=True, verbose_name='National ID/Passport')),
                ('email', models.EmailField(blank=True, help_text='example@gmail.com (Leave blank if the Scout is not a Jasiri)', max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text='Leave blank if the Scout is not a Jasiri', max_length=13, null=True, validators=[django.core.validators.RegexValidator(message="Entered mobile number isn't in a right format!", regex='^[0-9]{10,15}$')])),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registrations.unit')),
            ],
            options={
                'permissions': [('can_verify_scouts', 'Can verify scouts')],
                'unique_together': {('first_name', 'middle_name', 'unit')},
            },
        ),
        migrations.CreateModel(
            name='ScoutLeaderStats',
            fields=[
            ],
            options={
                'verbose_name': 'Scout Leaders Stats',
                'verbose_name_plural': 'Scout Leaders Stats',
                'proxy': True,
                'default_permissions': ('view',),
                'indexes': [],
                'constraints': [],
            },
            bases=('registrations.scoutleader',),
        ),
        migrations.CreateModel(
            name='ScoutStats',
            fields=[
            ],
            options={
                'verbose_name': 'Scouts Stats',
                'verbose_name_plural': 'Scouts Stats',
                'proxy': True,
                'default_permissions': ('view',),
                'indexes': [],
                'constraints': [],
            },
            bases=('registrations.scout',),
        ),
        migrations.CreateModel(
            name='UnitStats',
            fields=[
            ],
            options={
                'verbose_name': 'Units Stats',
                'verbose_name_plural': 'Units Stats',
                'proxy': True,
                'default_permissions': ('view',),
                'indexes': [],
                'constraints': [],
            },
            bases=('registrations.unit',),
        ),
        migrations.AlterUniqueTogether(
            name='scoutleader',
            unique_together={('first_name', 'national_id', 'email')},
        ),
    ]
