# Generated by Django 4.1.2 on 2022-10-09 06:36

import apps.core.project_requirements.utilities
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competitions', '0001_initial'),
        ('registrations', '0001_initial'),
        ('jurisdictions', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='competitionteam',
            name='chipukizi_competitors',
            field=models.ManyToManyField(blank=True, help_text='Only active & invested Chipukizi Scouts are valid options', limit_choices_to=models.Q(('active', True), ('section', 'Chipukizi'), ('investiture', True)), related_name='%(class)s_chipukizi_competitors', to='registrations.scout'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='competitors',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_competitors', to='registrations.scout'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='jasiri_competitors',
            field=models.ManyToManyField(blank=True, help_text='Only active & invested Jasiri Scouts are valid options', limit_choices_to=models.Q(('active', True), ('section', 'Jasiri'), ('jasiri_investiture', True)), related_name='%(class)s_jasiri_competitors', to='registrations.scout'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='leaders',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_leaders', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='mwamba_competitors',
            field=models.ManyToManyField(blank=True, help_text='Only active & invested Mwamba Scouts are valid options', limit_choices_to=models.Q(('active', True), ('section', 'Mwamba'), ('investiture', True)), related_name='%(class)s_mwamba_competitors', to='registrations.scout'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='special_category',
            field=models.ForeignKey(blank=True, help_text='Only select if the Team is a Special Team, otherwise leave blank', null=True, on_delete=django.db.models.deletion.PROTECT, to='competitions.specialteamscategories'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='team_leaders',
            field=models.ManyToManyField(help_text='Only active Scout Leaders are valid options', limit_choices_to=apps.core.project_requirements.utilities.active_limit, related_name='%(class)s_team_leaders', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competitionteam',
            name='unit',
            field=models.ForeignKey(help_text='Validity limited to verified units', limit_choices_to=models.Q(('active', True)), on_delete=django.db.models.deletion.PROTECT, to='registrations.unit'),
        ),
        migrations.AddField(
            model_name='competition',
            name='assessors',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_assessors', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competition',
            name='assistant_assessors',
            field=models.ManyToManyField(blank=True, help_text='Only active Scout Leaders are valid options', limit_choices_to=apps.core.project_requirements.utilities.active_limit, related_name='%(class)s_assistant_assessor', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competition',
            name='chief',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_chief', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competition',
            name='chief_assessor',
            field=models.ForeignKey(help_text='Only active Scout Leaders are valid options', limit_choices_to=apps.core.project_requirements.utilities.active_limit, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_chief_assessor', to='registrations.scoutleader'),
        ),
        migrations.AddField(
            model_name='competition',
            name='competing_teams',
            field=models.ManyToManyField(blank=True, help_text='Only Chipukizi teams registered in the year of competition are valid options', limit_choices_to=models.Q(('year', 2022)), to='competitions.competitionteam'),
        ),
        migrations.AddField(
            model_name='competition',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='jurisdictions.country', unique_for_year='start_date'),
        ),
        migrations.AddField(
            model_name='competition',
            name='sub_county',
            field=models.ForeignKey(blank=True, help_text='The SubCounty from which the competition is taking place', null=True, on_delete=django.db.models.deletion.PROTECT, to='jurisdictions.subcounty', unique_for_year='start_date'),
        ),
        migrations.AddField(
            model_name='competition',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_teams', to='competitions.competitionteam'),
        ),
        migrations.CreateModel(
            name='CompetitionStats',
            fields=[
            ],
            options={
                'verbose_name': 'Competition Stats',
                'verbose_name_plural': 'Competitions Stats',
                'proxy': True,
                'default_permissions': ('view',),
                'indexes': [],
                'constraints': [],
            },
            bases=('competitions.competition',),
        ),
        migrations.CreateModel(
            name='CompetitionTeamStats',
            fields=[
            ],
            options={
                'verbose_name': 'Competition Team Stats',
                'verbose_name_plural': 'Competition Teams Stats',
                'proxy': True,
                'default_permissions': ('view',),
                'indexes': [],
                'constraints': [],
            },
            bases=('competitions.competitionteam',),
        ),
        migrations.AlterUniqueTogether(
            name='competitionteam',
            unique_together={('name', 'unit', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='competition',
            unique_together={('year', 'level', 'sub_county', 'country')},
        ),
    ]
